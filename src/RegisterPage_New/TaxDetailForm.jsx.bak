import React from 'react';
import { Link } from 'react-router-dom';
import { connect } from 'react-redux';
import { TextField, Select, InputLabel, MenuItem, FormControl, Radio, RadioGroup, FormControlLabel, FormLabel } from '@material-ui/core';
import { validate } from '../_helpers';
import DateFnsUtils from '@date-io/date-fns';
import {
    MuiPickersUtilsProvider,
    DatePicker,
    KeyboardDatePicker
} from '@material-ui/pickers';

class TaxDetailForm extends React.Component {
    constructor(props) {
        super(props);
        this.state = this.initialState(null, null);
        this.handleChange = this.handleChange.bind(this);
    }
    initialState(mode, props) {
        let state = {};
        state = {
            controls: {
                txtTaxNum1: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                        isName: true
                    },
                    error: "Please enter first tax number ",
                    placeholder: "Tax Number 1",
                    touched: false,
                    visible: true,
                    disable: false
                },
                txtTaxNum2: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                    },
                    error: "Please enter second tax number ",
                    placeholder: "Tax Number 2",
                    touched: false,
                    visible: true,
                    disable: false
                },
                txtVatRegistration: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                    },
                    error: "Please enter vat registration",
                    placeholder: "Vat Registration #",
                    touched: false,
                    visible: true,
                    disable: false
                },

                ddlVendorAccountGroup: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                    },
                    error: "Please enter vendor account group",
                    placeholder: "Vendor Account Group",
                    touched: false,
                    visible: true,
                    disable: false
                },
                txtVendorImporterRecord: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                    },
                    error: "Please enter vendor importer  of record",
                    placeholder: "Vendor Importer  of Record",
                    touched: false,
                    visible: true,
                    disable: false
                },
                radioTaxType: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                    },
                    error: "Please enter indicator for withholding tax type",
                    placeholder: "Withholding tax type indicator",
                    touched: false,
                    visible: true,
                    disable: false
                },
                radioSubjectTax: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                        minLength: true,
                        isName: true
                    },
                    error: "Please specify whether subject to withholding tax.",
                    placeholder: "Subject to withholding tax?",
                    touched: false,
                    visible: true,
                    disable: false
                },
                txtWithholdingTaxCode: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                        minLength: true,
                        isName: true
                    },
                    error: "Please enter withholding tax code",
                    placeholder: "Withholding tax code",
                    touched: false,
                    visible: true,
                    disable: false
                },
                txtConfirmationControlKey: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                        minLength: true,
                        isName: true
                    },
                    error: "Please enter confirmation control key",
                    placeholder: "Confirmation Control Key",
                    touched: false,
                    visible: true,
                    disable: false
                },
                txtDeleteKey: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                        minLength: true,
                        isName: true
                    },
                    error: "Please enter delete flag for vendor at purchasing level",
                    placeholder: "Delete flag for vendor at purchasing level",
                    touched: false,
                    visible: true,
                    disable: false
                },
                txtShippingConditions: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                        minLength: true,
                        isName: true
                    },
                    error: "Please enter shipping conditions",
                    placeholder: "Shipping Conditions",
                    touched: false,
                    visible: true,
                    disable: false
                },
                radioGSTHSTVerification: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                        minLength: true,
                        isName: true
                    },
                    error: "Please enter GST/HST # verification ",
                    placeholder: "GST/HST # Verification Reminder",
                    touched: false,
                    visible: true,
                    disable: false
                },
                radioSalesTaxExemption: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                        minLength: true,
                        isName: true
                    },
                    error: "Please enter sales tax exemption",
                    placeholder: "Sales Tax Exemption Reminder",
                    touched: false,
                    visible: true,
                    disable: false
                },
                radioQSTVerification: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                        minLength: true,
                        isName: true
                    },
                    error: "Please enter QST # verification reminder",
                    placeholder: "QST # Verification Reminder",
                    touched: false,
                    visible: true,
                    disable: false
                },
                radioFormW9Verification: {
                    value: "",
                    valid: false,
                    validationRules: {
                        notEmpty: true,
                        minLength: true,
                        isName: true
                    },
                    error: "Please enter form W-9 or W-8 verification",
                    placeholder: "Form W-9 or W-8 Verification Reminder",
                    touched: false,
                    visible: true,
                    disable: false
                },

            },
            errors: {}
        };
        return state;
    }
    handleChange(event) {
        let key = event.target.name, value = event.target.value;
        let connectedValue = {};
        this.setState(prevState => {
            return {
                controls: {
                    ...prevState.controls,
                    [key]: {
                        ...prevState.controls[key],
                        value: value,
                        // valid: validate(
                        //   value,
                        //   prevState.controls[key].validationRules,
                        //   connectedValue
                        // ),
                        touched: true
                    }
                }
            };
        });
    }
    render() {
        return (
            <div className="mx-auto">
                <div className="form-row">
                    <div className="col-md-4 mb-3">
                        <TextField
                            id="txtTaxNum1"
                            margin="normal"
                            name="txtTaxNum1"
                            label={this.state.controls.txtTaxNum1.placeholder}
                            value={this.state.controls.txtTaxNum1.value}
                            onChange={this.handleChange}
                            className="form-control"
                            placeholder={this.state.controls.txtTaxNum1.value}
                        />
                    </div>
                    <div className="col-md-4 mb-3">
                        <TextField
                            id="txtTaxNum2"
                            margin="normal"
                            name="txtTaxNum2"
                            label={this.state.controls.txtTaxNum2.placeholder}
                            value={this.state.controls.txtTaxNum2.value}
                            onChange={this.handleChange}
                            className="form-control"
                            placeholder={this.state.controls.txtTaxNum2.value}
                        />
                    </div>
                    <div className="col-md-4 mb-3">
                        <TextField
                            id="txtVatRegistration"
                            margin="normal"
                            name="txtVatRegistration"
                            label={this.state.controls.txtVatRegistration.placeholder}
                            value={this.state.controls.txtVatRegistration.value}
                            onChange={this.handleChange}
                            className="form-control"
                            placeholder={this.state.controls.txtVatRegistration.value}
                        />
                    </div>
                </div>
                <div className="form-row">
                    <div className="col-md-6 mb-3">
                        <FormControl style={{ width: '100%', marginTop: '11px' }}>
                            <InputLabel htmlFor="ddlVendorAccountGroup">{this.state.controls.ddlVendorAccountGroup.placeholder}</InputLabel>
                            <Select className="form-control"
                                inputProps={{
                                    name: 'ddlVendorAccountGroup',
                                    id: 'ddlVendorAccountGroup',
                                    placeholder: this.state.controls.ddlVendorAccountGroup.placeholder,
                                    value: this.state.controls.ddlVendorAccountGroup.value,
                                    onChange: this.handleChange
                                }}
                            >
                                <MenuItem value={""}>None</MenuItem>
                                <MenuItem value={10}>Ten</MenuItem>
                                <MenuItem value={20}>Twenty</MenuItem>
                                <MenuItem value={30}>Thirty</MenuItem>
                            </Select>
                        </FormControl>
                    </div>
                    <div className="col-md-6 mb-3">
                        <TextField
                            id="txtVendorImporterRecord"
                            margin="normal"
                            name="txtVendorImporterRecord"
                            label={this.state.controls.txtVendorImporterRecord.placeholder}
                            value={this.state.controls.txtVendorImporterRecord.value}
                            onChange={this.handleChange}
                            className="form-control"
                            placeholder={this.state.controls.txtVendorImporterRecord.value}
                        />
                    </div>
                </div>
                <br/><br/>
                <div className="form-row">
                    <div className="col-md-4 mb-3">
                        <FormControl component="fieldset" >
                            <FormLabel component="legend">{this.state.controls.radioTaxType.placeholder}</FormLabel>
                            <RadioGroup aria-label="radioTaxType" name="radioTaxType" value={this.state.controls.radioTaxType.value} onChange={this.handleChange} row>
                                <FormControlLabel
                                    value="1"
                                    control={<Radio color="primary" />}
                                    label="Yes"
                                    labelPlacement="end"
                                />
                                <FormControlLabel
                                    value="0"
                                    control={<Radio color="primary" />}
                                    label="No"
                                    labelPlacement="end"
                                />
                            </RadioGroup>
                        </FormControl>
                    </div>
                    <div className="col-md-4 mb-3">
                        <FormControl component="fieldset" >
                            <FormLabel component="legend">{this.state.controls.radioSubjectTax.placeholder}</FormLabel>
                            <RadioGroup aria-label="radioSubjectTax" name="radioSubjectTax" value={this.state.controls.radioSubjectTax.value} onChange={this.handleChange} row>
                                <FormControlLabel
                                    value="1"
                                    control={<Radio color="primary" />}
                                    label="Yes"
                                    labelPlacement="end"
                                />
                                <FormControlLabel
                                    value="0"
                                    control={<Radio color="primary" />}
                                    label="No"
                                    labelPlacement="end"
                                />
                            </RadioGroup>
                        </FormControl>
                    </div>
                    <div className="col-md-4 mb-3">
                        <TextField
                            id="txtWithholdingTaxCode"
                            margin="normal"
                            name="txtWithholdingTaxCode"
                            label={this.state.controls.txtWithholdingTaxCode.placeholder}
                            value={this.state.controls.txtWithholdingTaxCode.value}
                            onChange={this.handleChange}
                            className="form-control"
                            placeholder={this.state.controls.txtWithholdingTaxCode.value}
                        /></div>
                </div>
                <div className="form-row">
                    <div className="col-md-6 mb-3">
                        <TextField
                            id="txtConfirmationControlKey"
                            margin="normal"
                            name="txtConfirmationControlKey"
                            label={this.state.controls.txtConfirmationControlKey.placeholder}
                            value={this.state.controls.txtConfirmationControlKey.value}
                            onChange={this.handleChange}
                            className="form-control"
                            placeholder={this.state.controls.txtConfirmationControlKey.value}
                        />
                    </div>
                    <div className="col-md-6 mb-3">
                        <TextField
                            id="txtDeleteKey"
                            margin="normal"
                            name="txtDeleteKey"
                            label={this.state.controls.txtDeleteKey.placeholder}
                            value={this.state.controls.txtDeleteKey.value}
                            onChange={this.handleChange}
                            className="form-control"
                            placeholder={this.state.controls.txtDeleteKey.value}
                        />
                    </div>
                </div>
                <div className="form-row">
                    <div className="col-md-12 mb-3">
                        <TextField
                            id="txtShippingConditions"
                            margin="normal"
                            name="txtShippingConditions"
                            label={this.state.controls.txtShippingConditions.placeholder}
                            value={this.state.controls.txtShippingConditions.value}
                            onChange={this.handleChange}
                            className="form-control"
                            placeholder={this.state.controls.txtShippingConditions.placeholder}
                        />
                    </div>
                </div>
                <br/><br/>
                <div className="form-row">
                    <div className="col-md-6 mb-3">
                        <FormControl component="fieldset" >
                            <FormLabel component="legend">{this.state.controls.radioGSTHSTVerification.placeholder}</FormLabel>
                            <RadioGroup aria-label="radioGSTHSTVerification" name="radioGSTHSTVerification" value={this.state.controls.radioGSTHSTVerification.value} onChange={this.handleChange} row>
                                <FormControlLabel
                                    value="Yes"
                                    control={<Radio color="primary" />}
                                    label="Yes"
                                    labelPlacement="end"
                                />
                                <FormControlLabel
                                    value="No"
                                    control={<Radio color="primary" />}
                                    label="No"
                                    labelPlacement="end"
                                />
                            </RadioGroup>
                        </FormControl>
                    </div>
                    <div className="col-md-6 mb-3">
                        <FormControl component="fieldset" >
                            <FormLabel component="legend">{this.state.controls.radioSalesTaxExemption.placeholder}</FormLabel>
                            <RadioGroup aria-label="radioSalesTaxExemption" name="radioSalesTaxExemption" value={this.state.controls.radioSalesTaxExemption.value} onChange={this.handleChange} row>
                                <FormControlLabel
                                    value="Yes"
                                    control={<Radio color="primary" />}
                                    label="Yes"
                                    labelPlacement="end"
                                />
                                <FormControlLabel
                                    value="No"
                                    control={<Radio color="primary" />}
                                    label="No"
                                    labelPlacement="end"
                                />
                            </RadioGroup>
                        </FormControl>
                    </div>
                </div>
                <div className="form-row">
                    <div className="col-md-6 mb-3">
                        <FormControl component="fieldset" >
                            <FormLabel component="legend">{this.state.controls.radioFormW9Verification.placeholder}</FormLabel>
                            <RadioGroup aria-label="radioFormW9Verification" name="radioFormW9Verification" value={this.state.controls.radioFormW9Verification.value} onChange={this.handleChange} row>
                                <FormControlLabel
                                    value="Yes"
                                    control={<Radio color="primary" />}
                                    label="Yes"
                                    labelPlacement="end"
                                />
                                <FormControlLabel
                                    value="No"
                                    control={<Radio color="primary" />}
                                    label="No"
                                    labelPlacement="end"
                                />
                            </RadioGroup>
                        </FormControl>
                    </div>
                    <div className="col-md-6 mb-3">
                        <FormControl component="fieldset" >
                            <FormLabel component="legend">{this.state.controls.radioQSTVerification.placeholder}</FormLabel>
                            <RadioGroup aria-label="radioQSTVerification" name="radioQSTVerification" value={this.state.controls.radioQSTVerification.value} onChange={this.handleChange} row>
                                <FormControlLabel
                                    value="Yes"
                                    control={<Radio color="primary" />}
                                    label="Yes"
                                    labelPlacement="end"
                                />
                                <FormControlLabel
                                    value="No"
                                    control={<Radio color="primary" />}
                                    label="No"
                                    labelPlacement="end"
                                />
                            </RadioGroup>
                        </FormControl>
                    </div>
                </div>
            </div>
        );
    }
}

function mapStateToProps(state) {
    return {

    };
}

const connectedTaxDetailForm = connect(mapStateToProps)(TaxDetailForm);
export { connectedTaxDetailForm as TaxDetailForm };
